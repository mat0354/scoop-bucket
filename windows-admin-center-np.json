{
    "##": "Renaming .msi to .msi_ so that the MSI package will not be automatically extracted by Scoop.",
    "version": "2007",
    "description": "Windows Admin Center is a locally deployed, browser-based app for managing Windows servers, clusters, hyper-converged infrastructure, as well as Windows 10 PCs.",
    "homepage": "https://docs.microsoft.com/en-us/windows-server/manage/windows-admin-center/overview",
    "license": "Freeware",
    "notes": [
        "Persistent data stored in C:\\Windows\\ServiceProfiles\\NetworkService\\AppData\\Roaming\\Microsoft\\ServerManagementExperience_persist",
        "and C:\\ProgramData\\Server Management Experience_persist",
        "To manage updates with \"Windows Update\" uncomment $InstalledBuild from uninstaller section",
        "create pull request? https://github.com/TheRandomLabs/scoop-nonportable"
    ],
    "architecture": {
        "64bit": {
            "url": "https://aka.ms/WACDownload#/WindowsAdminCenter.msi_",
            "hash": "984321e591a37540e12ec2975241174b84bf1c8119802d1f0f643f9743c6b097"
        }
    },
    "pre_install": [
        "if (-Not (is_admin)) { error 'Administrator privileges needed'; break }",
        "if (-Not ($PSVersionTable.PSVersion -ge [System.Version]'5.1')) { error 'WMF version 5.1 or higher needed'; break }"
    ],
    "installer": {
        "script": [
            "New-Item -Path \"$env:SystemRoot\\ServiceProfiles\\NetworkService\\AppData\\Roaming\\Microsoft\\ServerManagementExperience_persist\" -Type Directory -ErrorAction SilentlyContinue | Out-Null",
            "New-Item -Path \"$env:ProgramData\\Server Management Experience_persist\" -Type Directory -ErrorAction SilentlyContinue | Out-Null",
            "New-Item -Path \"$env:SystemRoot\\ServiceProfiles\\NetworkService\\AppData\\Roaming\\Microsoft\\ServerManagementExperience\" -Target \"$env:SystemRoot\\ServiceProfiles\\NetworkService\\AppData\\Roaming\\Microsoft\\ServerManagementExperience_persist\" -ItemType Junction | Out-Null",
            "New-Item -Path \"$env:ProgramData\\Server Management Experience\" -Target \"$env:ProgramData\\Server Management Experience_persist\" -ItemType Junction | Out-Null",
            "$ServerCertificateThumbprint = (Get-ChildItem -Path \"Cert:\\LocalMachine\\My\" | Where-Object { $_.HasPrivateKey -eq $true -and $_.EnhancedKeyUsageList -like \"*Server Authentication*\" -and $_.DnsNameList -in \"$([System.Net.Dns]::GetHostByName((hostname)).HostName.ToLower())\" -and $_.NotAfter -ge (Get-Date) } | Sort-Object NotAfter | Select-Object -First 1).Thumbprint",
            "$SmePort = 6516",
            "if ($ServerCertificateThumbprint) {$MsiArgumentString = \"SME_PORT=$SmePort SSL_CERTIFICATE_OPTION=installed SME_THUMBPRINT=$ServerCertificateThumbprint MS_UPDATE_OPT_IN=no RESTART_WINRM=0\"} else {\"SME_PORT=$SmePort SSL_CERTIFICATE_OPTION=generate MS_UPDATE_OPT_IN=no RESTART_WINRM=0\"}",
            "# $MsiArgumentString += \" REINSTALLMODE=amus REINSTALL=ALL\"",
            "$InstallExitCode = (Start-Process -Wait msiexec \"/i `\"$dir\\WindowsAdminCenter.msi_`\" /qn /L*v `\"$dir\\WindowsAdminCenter-Install.log`\" $MsiArgumentString\" -Verb RunAs -Passthru).ExitCode",
            "if ($InstallExitCode -ne 0) { abort \"Install failed with ExitCode [$InstallExitCode]. See log for details:`n$dir\\WindowsAdminCenter-Install.log\" }"
        ]
    },
    "post_install": [
        "Remove-Item \"$dir\\WindowsAdminCenter.msi_\"",
        "Restart-Service -Name WinRM",
        "Restart-Service -Name ServerManagementGateway"
    ],
    "uninstaller": {
        "script": [
            "if (-Not (is_admin)) { error 'Administrator privileges needed'; break }",
            "# $InstalledBuild = ([System.Version](Get-Item -Path ((Get-WmiObject -Class Win32_Product -Filter \"Name = 'Windows Admin Center'\").InstallLocation + \"sme.exe\") -ErrorAction SilentlyContinue).VersionInfo.FileVersion).Build",
            "if ($InstalledBuild -gt $version) { error 'Newer version already installed'; break }",
            "$IdentifyingNumber = (Get-WmiObject -Class Win32_Product -Filter \"Name = 'Windows Admin Center'\").IdentifyingNumber",
            "$UninstallExitCode = (Start-Process -Wait msiexec \"/x `\"$IdentifyingNumber`\" /qn /L*v `\"$dir\\WindowsAdminCenter-Uninstall.log`\" RESTART_WINRM=0\" -Verb RunAs -Passthru).ExitCode",
            "if ($UninstallExitCode -ne 0) { abort \"Uninstall failed with ExitCode [$UninstallExitCode]. See log for details:`n$dir\\WindowsAdminCenter-Uninstall.log\" }",
            "Restart-Service -Name WinRM"
        ]
    },
    "checkver": {
        "url": "https://raw.githubusercontent.com/MicrosoftDocs/windowsserverdocs/master/WindowsServerDocs/manage/windows-admin-center/support/release-history.md",
        "regex": "\\[(?<version>[\\d.]+)\\].*is the most recent GA release"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "https://aka.ms/WACDownload#/WindowsAdminCenter.msi_"
            }
        }
    }
}
